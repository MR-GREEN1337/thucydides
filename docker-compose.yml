services:
  web:
    build: ./web
    platform: linux/amd64
    ports:
      - "3000:3000"
    env_file:
      - ./web/.env
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./backend
    platform: linux/amd64
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    # NEW: Override the QDRANT_URL for container-to-container communication.
    # The backend will connect to the 'qdrant' service on the internal Docker network.
    environment:
      - QDRANT_URL=http://qdrant:6333
    depends_on:
      postgres:
        condition: service_healthy
      # NEW: The backend now also depends on the qdrant service.
      qdrant:
        condition: service_started
    networks:
      - app-network

  postgres:
    # UPDATED: Changed from 17.5 to 16 for stability, as 17 is not yet released.
    image: postgres:16
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # NEW: Added the Qdrant vector database service.
  qdrant:
    image: qdrant/qdrant:v1.10.1
    restart: unless-stopped
    ports:
      - "6333:6333" # HTTP API
      - "6334:6334" # gRPC API
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - app-network

volumes:
  postgres-data:
  # NEW: Added a persistent volume for Qdrant data.
  qdrant-data:

networks:
  app-network:
    driver: bridge
